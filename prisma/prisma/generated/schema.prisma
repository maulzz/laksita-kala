generator client {
  provider = "prisma-client-js"
  output   = "./prisma/generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  courses       Course[]
  tasks         Task[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Course {
  id        String   @id @default(uuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  tasks     Task[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  startDate   DateTime
  dueDate     DateTime
  priority    Priority
  taskType    TaskType
  status      Status
  createdAt   DateTime @default(now())
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

enum Priority {
  RENDAH
  SEDANG
  PENTING
}

enum TaskType {
  TUGAS_INDIVIDU
  TUGAS_KELOMPOK
  KUIS
  UTS
  UAS
}

enum Status {
  BELUM_DIMULAI
  SEDANG_DIKERJAKAN
  SELESAI
}
